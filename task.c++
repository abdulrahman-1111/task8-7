//#include <iostream>
//using namespace std;
//
//int main() {
//    // ?????  ????????
//    const int length = 10;
//    int arr[length];
//
//    // ???? ?? ??? ???????? ?? ????????
//    cout << "Enter 10 values:" << endl;
//    for (int i = 0; i < length; i++) {
//        cout << "Value " << i + 1 << ": ";
//        cin >> arr[i];
//    }
//
//    // ?????  ???????? ?? ??? ????? ??? ?? ????
//    cout << "Array values: ";
//    for (int i = 0; i < length; i++) {
//        cout << arr[i] << " ";
//    }
//    cout << endl;
//
//    // ????? ??? ???????? ?????? ???? ?? ??? ????? ??? ?? ????
//    cout << "Reversed array values: ";
//    for (int i = length - 1; i >= 0; i--) {
//        cout << arr[i] << " ";
//    }
//    cout << endl;
//
//    //  ????? ????? ????????
//    int sum = 0;
//    for (int i = 0; i < length; i++) {
//        sum += arr[i];
//    }
//    cout << "Summation of array elements: " << sum << endl;
//
//    //  ???? ??? ????? ????????
//    int product = 1;
//    for (int i = 0; i < length; i++) {
//        product *= arr[i];
//    }
//    cout << "Product of array elements: " << product << endl;
//
//    return 0;
//}
// 
// 
// -------------------------------------------------------
// ?????? ??????
// 
// 
//#include <iostream>
//using namespace std;
//
//int main() {
//    // ????? ??? ?????? ????????
//    const int rows = 3;
//    const int columns = 3;
//    int matrix[rows][columns];
//
//    // ??? ??? ???????? ?? ????????
//    cout << "Enter 9 values for the matrix:" << endl;
//    for (int i = 0; i < rows; i++) {
//        for (int j = 0; j < columns; j++) {
//            cout << "Value [" << i << "][" << j << "]: ";
//            cin >> matrix[i][j];
//        }
//    }
//
//    // ????? ??? ???????? ?? ??? ????? ??? ?? ???? ??? ???? ??? ?? ??
//    cout << "Matrix values:" << endl;
//    for (int i = 0; i < rows; i++) {
//        for (int j = 0; j < columns; j++) {
//            cout << matrix[i][j] << " ";
//        }
//        cout << endl;
//    }
//
//    // ????? ????? ?? ??
//    for (int i = 0; i < rows; i++) {
//        int rowSum = 0;
//        for (int j = 0; j < columns; j++) {
//            rowSum += matrix[i][j];
//        }
//        cout << "Sum of row " << i + 1 << ": " << rowSum << endl;
//    }
//
//    // ????? ???? ??? ?? ??
//    for (int i = 0; i < rows; i++) {
//        int rowProduct = 1;
//        for (int j = 0; j < columns; j++) {
//            rowProduct *= matrix[i][j];
//        }
//        cout << "Product of row " << i + 1 << ": " << rowProduct << endl;
//    }
//
//    return 0;
//}
//--------------------------------------------------------------
// ?????? ??????
// 
// 
//#include <iostream>
//using namespace std;
//
//int main() {
//    // ????? ??? ?????? ????????
//    const int rows = 3;
//    const int columns = 4;
//    int matrix[rows][columns];
//    int transpose[columns][rows]; // ?????? ?????? ???????? ???????
//
//    // ??? ??? ???????? ?? ????????
//    cout << "Enter 12 values for the matrix:" << endl;
//    for (int i = 0; i < rows; i++) {
//        for (int j = 0; j < columns; j++) {
//            cout << "Value [" << i << "][" << j << "]: ";
//            cin >> matrix[i][j];
//        }
//    }
//
//    // ????? ???????? (????? ?????? ????????)
//    for (int i = 0; i < rows; i++) {
//        for (int j = 0; j < columns; j++) {
//            transpose[j][i] = matrix[i][j];
//        }
//    }
//
//    // ????? ???????? ????????
//    cout << "Matrix values:" << endl;
//    for (int i = 0; i < rows; i++) {
//        for (int j = 0; j < columns; j++) {
//            cout << matrix[i][j] << " ";
//        }
//        cout << endl;
//    }
//
//    // ????? ???????? ???????
//    cout << "Transpose Matrix values:" << endl;
//    for (int i = 0; i < columns; i++) {
//        for (int j = 0; j < rows; j++) {
//            cout << transpose[i][j] << " ";
//        }
//        cout << endl;
//    }
//
//    return 0;
//}
//
